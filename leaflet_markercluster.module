<?php

/**
 * Preprocess the leaflet_map theme function to add
 * the markercluster libraries.
 *
 * @param  [type] &$vars [description]
 * @return [type]        [description]
 */
function leaflet_markercluster_preprocess_leaflet_map(&$vars) {
  $vars['#attached']['library'] = array(
    'leaflet_markercluster/leaflet-markercluster',
    'leaflet_markercluster/leaflet-markercluster-drupal',
  );
}

/**
 * Implements hook_requirements().
 */
function leaflet_markercluster_requirements($phase) {
  $requirements = array();
  if ($phase != 'runtime') {
    return $requirements;
  }
  $requirements['leaflet_markercluster']['title'] = t('Leaflet MarkerCluster library');
  if ($path = leaflet_markercluster_get_library_path()) {
    $file = "$path/leaflet.markercluster.js";
  }
  if ($path && file_exists($file)) {
    $requirements['leaflet_markercluster']['value'] = t('Installed');
    $requirements['leaflet_markercluster']['severity'] = REQUIREMENT_OK;
  }
  else {
    $requirements['leaflet_markercluster']['value'] =
      $path ? t('File not found: %file', array('%file' => $file)) : t('/leaflet_markercluster library directory missing');
    $requirements['leaflet_markercluster']['severity'] = REQUIREMENT_ERROR;
  }

  return $requirements;
}

function leaflet_markercluster_get_library_path() {
  if (module_exists('libraries')) {
    $path = libraries_get_path('leaflet_markercluster');
    return $path ? "$path/dist" : FALSE;
  }
  // Hard-coded fallback when Libraries module isn't enabled.
  return 'sites/all/libraries/leaflet_markercluster/dist';
}
